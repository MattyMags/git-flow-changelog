export declare type DefaultAttributes = {
    fullHash: string;
    partialHash: string;
    author: Person;
    authorTime: Date;
    committer: Person;
    commitTime: Date;
    subject: string;
    body: string;
    tags: string[];
};
export declare type OptionalLogAttributes = {
    refs: string[];
    fullBody: string;
    treeHash: string;
    partialTreeHash: string;
    parentHashes: string[];
    partialParentHashes: string[];
    gpgKey: string;
    gpgSigner: Person | null;
    gpgStatus: string;
};
export declare type OptionalAttributes = OptionalLogAttributes & {
    diff: GitDiff;
};
export declare type Commit = DefaultAttributes & Partial<OptionalAttributes>;
export interface GitDiff {
    added: Set<string>;
    deleted: Set<string>;
    modified: Set<string>;
    touched: Set<string>;
}
export interface Person {
    name: string;
    email: string;
}
export declare class CommitBuilder {
    private static readonly sources;
    private static readonly defaultKeys;
    readonly formatString: string;
    private readonly keys;
    constructor(optionalKeys: Set<keyof Commit>);
    buildAll(rawData: string): Commit[];
    private placeholderTokens();
    private buildCommit(rawData);
}
