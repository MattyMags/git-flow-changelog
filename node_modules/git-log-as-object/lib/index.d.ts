import { Commit } from './CommitBuilder';
export { Commit, GitDiff, Person } from './CommitBuilder';
export interface Options {
    dir?: string;
    startRef?: string;
    endRef?: string;
    includeKeys?: string[];
}
/**
 *  Asynchronously fetches the metadata of all commits within a particular reference range.
 *  @param options An object containing (optionally,) the path of the repo's root directory, the
 *    starting and ending refs of the commit range, and the names of any extra attributes to include
 *    in the resulting report.
 *  @return A Promise for an array of objects containing the metadata of each commit in the range.
 */
export declare function gitLog(options?: Options): Promise<Commit[]>;
/**
 *  Synchronously fetches the metadata of all commits within a particular reference range.
 *  @param options An object containing (optionally,) the path of the repo's root directory, the
 *    starting and ending refs of the commit range, and the names of any extra attributes to include
 *    in the resulting report.
 *  @return An array of objects containing the metadata of each commit in the range.
 */
export declare function gitLogSync(options?: Options): Commit[];
